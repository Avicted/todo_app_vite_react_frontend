import { test, expect } from '@playwright/test';

/* test.beforeEach(async ({ page }) => {
    // Runs before each test and signs in each page.
    await page.goto('http://localhost:5173/authentication/login');

    // Fill the form
    await page.fill('input[name="email"]', `tester@test.tld` );
    await page.fill('input[name="password"]', 'password123');

    // Submit the form
    await page.click('button[type="submit"]');
});*/

// --- TodoItems.spec.ts ---
test('Create a new Todo Item', async ({ page }) => {    
    // Login with known user
    await page.goto('http://localhost:5173/authentication/login');

    // Fill the form
    await page.fill('input[name="email"]', `tester@test.tld` );
    await page.fill('input[name="password"]', 'password123');

    // Submit the form
    await page.click('button[type="submit"]');

    // wait for the page to load
    await page.waitForLoadState('networkidle');
    // ---------------------------------------------------------------------


    await page.goto('http://localhost:5173/todos');

    // Click the Add Todo button with id create-todo-item-button
    await page.click('#create-todo-item-button');

    // Fill the form
    const expectedTodoItemName = `Test Todo Item created by Playwright ${new Date().getTime()}`;
    await page.fill('input[name="name"]', expectedTodoItemName);

    await page.fill('textarea[name="description"]', 'This is a test todo item description generated by Playwright automatically :)');

    // Choose a type
    await page.selectOption('select[id="status"]', '1');

    // Submit the form
    await page.click('button[name="submit"]');

    // wait for the page to load
    await page.waitForLoadState('networkidle');

    // Expect the page to have the new todo item expectedTodoItemName
    await expect(page.locator('ul')).toContainText(expectedTodoItemName);
});